{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI;;;;;;;;;;;;;;;AC5IgC;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,mBAAmB,UAAU,MAAM,SAAS;AAC5C,0CAA0C,WAAW;AACrD,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,+DAAW;AACb;AACA,qBAAqB,iCAAiC,OAAO;AAC7D;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,iCAAiC;AACvD;;AAEA;;AAEA;AACA,sBAAsB,KAAK,MAAM,OAAO;AACxC,6CAA6C,MAAM;AACnD,2CAA2C,MAAM;AACjD;AACA;AACA;AACA,qDAAqD,MAAM;AAC3D;AACA;;AAEA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACrH0B;AACE;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,UAAU;AACV;AACA;AACA,MAAM,4DAAQ;AACd;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,IAAI,iDAAS;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,QAAQ;AACpD;AACA;AACA;;AAEA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,MAAM,kDAAU;AAChB,KAAK,SAAS;AACd;AACA;;;AAGA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC5KpB;AACA;;AAEA,+BAA+B;AAC/B;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qCAAqC;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA,iFAAiF;AACjF,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,mEAAmE;AACnE;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;AC7FrB,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;;AAE9D;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,+CAA+C,cAAc,OAAO,cAAc;AAClF,6BAA6B,WAAW;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,WAAW,OAAO,WAAW;AAC9E,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,WAAW,OAAO,WAAW;AAC9E,MAAM;AACN;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,cAAc;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;AAER;AACA;;AAEA;AACA,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA,MAAM;AACN;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA,0BAA0B,cAAc;AACxC,4BAA4B,WAAW;AACvC,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gFAAgF;AAChF;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,iDAAiD,OAAO;;AAExD;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,YAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,iDAAiD,OAAO;;AAExD;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,YAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mDAAmD,OAAO;;AAE1D;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,KAAK;;AAEL,GAAG;AACH;;AAEA;;AAEA,iEAAe,MAAM;;;;;;;;;;;;;;ACjSrB;AACA;AACA;AACA;;;AAGA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA,+CAA+C;AAC/C,kDAAkD;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA,iEAAe,IAAI;;;;;;;;;;;;;;AC1CnB;;AAEA;AACA;;AAEA,4DAA4D;AAC5D;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,oDAAoD;AACpD,uDAAuD;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA,iBAAiB,IAAI;AACrB,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC9EpB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,IAAI,YAAY,WAAW;AAClE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;UCtDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACQ;AACR;AACA;AACF;AACE;AACE;;AAEtC;AACA;AACA,yCAAyC,yDAAS;AAClD;AACA,EAAE,yDAAI;AACN,EAAE,0DAAK;AACP,EAAE,0DAAK;AACP,EAAE,0DAAK;AACP,EAAE,yDAAI;AACN,EAAE,0DAAK;AACP,EAAE,2DAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\n  /* Опис\n  - Беремо дані введені користувачем\n  - Підставляємо в формуло\n  - Виводимо результат\n  */\n  const result = document.querySelector('.calculating__result span');\n\n  let sex, height, weight, age, ratio;\n\n  if (localStorage.getItem('sex')) {\n    sex = localStorage.getItem('sex');\n  } else {\n    sex = 'female';\n    localStorage.setItem('sex', sex);\n  }\n\n  if (localStorage.getItem('ratio')) {\n    ratio = localStorage.getItem('ratio');\n  } else {\n    ratio = 1.375;\n    localStorage.setItem('ratio', ratio);\n  }\n\n  function initLocalSettings (selector, activeClass) {\n    const elements = document.querySelectorAll(selector);\n\n    elements.forEach(elem => {\n      elem.classList.remove(activeClass);\n\n      if (elem.getAttribute('id') === localStorage.getItem('sex')) {\n        elem.classList.add(activeClass);\n      } \n\n      if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\n        elem.classList.add(activeClass);\n      }\n    });\n  }\n\n  initLocalSettings('#gender div', 'calculating__choose-item_active');\n  initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\n\n\n  function calcTotal() {\n    // Перевіряємо чи всі поля заповнені\n    if (!sex || !weight || !age || !ratio) {\n      result.textContent = '0';\n      return;\n    }\n\n    // Розрахунок по формлуі\n    if (sex === 'female') {\n      result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\n    } else {\n      result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n    }\n  }\n  calcTotal();\n\n  function getStaticInfo(selector, activeClass) {\n    const elements = document.querySelectorAll(selector);\n\n    /* Делегування подій тут працюватиме з багами\n    document.querySelector(parentSelector).addEventListener('click', (e) => {\n      if (e.target.getAttribute('data-ratio')) {\n        ratio = +e.target.getAttribute('data-ratio');\n      } else {\n        sex = e.target.getAttribute('id');\n      }\n\n      // Прибираємо класс активності у всіх\n      elements.forEach(elem => {\n        elem.classList.remove(activeClass);\n      });\n\n      // Назначаємо елементу активний клас\n      e.target.classList.add(activeClass);\n\n      calcTotal();\n    });\n    */\n\n    elements.forEach(elem => {\n      elem.addEventListener('click', (e) => {\n        if (e.target.getAttribute('data-ratio')) {\n          ratio = +e.target.getAttribute('data-ratio');\n          localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\n        } else {\n          sex = e.target.getAttribute('id');\n          localStorage.setItem('sex', e.target.getAttribute('id'));\n        }\n  \n        // Прибираємо класс активності у всіх\n        elements.forEach(elem => {\n          elem.classList.remove(activeClass);\n        });\n  \n        // Назначаємо елементу активний клас\n        e.target.classList.add(activeClass);\n  \n        calcTotal();\n      });\n    });\n  }\n  getStaticInfo('#gender div', 'calculating__choose-item_active');\n  getStaticInfo('.calculating__choose_big div', 'calculating__choose-item_active');\n\n  function getDinamicInfo(selector) {\n    const input = document.querySelector(selector);\n\n    // Отрмуємо дані з полів\n    input.addEventListener('input', () => {\n\n      if(input.value.match(/\\D/g)) {\n        input.style.border = '1px solid red';\n      } else {\n        input.style.border = 'none';\n      }\n\n      switch(input.getAttribute('id')) {\n        case 'height':\n          height = +input.value;\n          break;\n        case 'weight':\n          weight = +input.value;\n          break;\n        case 'age':\n          age = +input.value;\n          break;\n      }\n\n      calcTotal();\n    });\n  }\n  getDinamicInfo('#height');\n  getDinamicInfo('#weight');\n  getDinamicInfo('#age');\n}\n\nexport default calc;","import { getResource } from \"../services/services\";\n\nfunction cards() {\n  class ItemCard {\n    constructor(src, alt, title, descr, price, parentSelector, ...classes) {\n      this.src = src;\n      this.alt = alt;\n      this.title = title;\n      this.descr = descr;\n      this.price = price;\n      this.classes = classes;\n      this.parent = document.querySelector(parentSelector);\n      this.transfer = 38;\n      this.changeToUAH();\n    }\n\n    // метод для конвертації валюти в грн\n    changeToUAH() {\n      this.price = this.price * this.transfer;\n    }\n\n    // метод створення картки render()\n    render() {\n      const element = document.createElement('div');\n\n      if (this.classes.length === 0) {\n        this.element = 'menu__item';\n        element.classList.add(this.element);\n      } else {\n        this.classes.forEach(className => element.classList.add(className));\n      }\n      \n      element.innerHTML = `\n        <img src=${this.src} alt=${this.alt}>\n        <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n        <div class=\"menu__item-descr\">${this.descr}</div>\n        <div class=\"menu__item-divider\"></div>\n        <div class=\"menu__item-price\">\n            <div class=\"menu__item-cost\">Цена:</div>\n            <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n        </div>\n      `;\n      this.parent.append(element);\n    }\n  }\n\n  const menuBlock = document.querySelector('.menu__field').firstElementChild;\n  menuBlock.innerHTML = '';\n\n  getResource('http://localhost:3000/menu')\n    .then(data => {\n      data.forEach(({img, altimg, title, descr, price}) => { // data це властивість обʼєкта який повертає axios із сервера\n      new ItemCard(img, altimg, title, descr, price, \".menu .container\").render();\n      });\n    });\n\n// #region створення карточок 1: вручну\n  // new ItemCard(\n  //   \"img/tabs/vegy.jpg\", \n  //   \"vegy\", \n  //   'Меню \"Фитнес\"', \n  //   'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\n  //   6,\n  //   \".menu .container\"\n  \n  // ).render(); // тут клас записується через if в методі render\n\n  // new ItemCard(\n  //   \"img/tabs/elite.jpg\", \n  //   \"elite\", \n  //   'Меню “Премиум”', \n  //   'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!',\n  //   15,\n  //   \".menu .container\",\n  //   'menu__item'\n  // ).render();\n\n  // new ItemCard(\n  //   \"img/tabs/post.jpg\" , \n  //   \"post\", \n  //   'Меню \"Постное\"', \n  //   'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.',\n  //   12,\n  //   \".menu .container\",\n  //   'menu__item'\n  // ).render();\n// #endregion\n\n// #region створення карточки 2: без використання класу\n  // getResource('http://localhost:3000/menu')\n  //   .then(data => createCard(data));\n\n  // function createCard(data) {\n  //   data.forEach(({img, altimg, title, descr, price}) => {\n  //     const element = document.createElement('div');\n\n  //     element.classList.add('menu__item');\n\n  //     element.innerHTML = `\n  //       <img src=${img} alt=${altimg}>\n  //       <h3 class=\"menu__item-subtitle\">${title}</h3>\n  //       <div class=\"menu__item-descr\">${descr}</div>\n  //       <div class=\"menu__item-divider\"></div>\n  //       <div class=\"menu__item-price\">\n  //           <div class=\"menu__item-cost\">Цена:</div>\n  //           <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\n  //       </div>\n  //     `;\n\n  //     document.querySelector('.menu .container').append(element);\n  //   });\n  // }\n\n// #endregion\n \n}\n \nexport default cards;","import {closeModal, openModal} from \"./modal\";\nimport { postData } from \"../services/services\";\n\nfunction forms(formSelector, modalTimerId) {\n  const forms = document.querySelectorAll(formSelector);\n  const message = {\n    loading: 'img/form/spinner.svg',\n    success: 'Дякуємо! Ми скоро зʼяжемось з вами',\n    failure: 'Щось пішло не так...'\n  };\n\n  // Формуємо обʼєкт з наших полів\n  forms.forEach(item => {\n    bindPostData(item);\n  });\n\n  // Функція \"привʼязування\" постінга\n  function bindPostData(form) {\n    form.addEventListener('submit', (e) => {\n      e.preventDefault();\n\n      // Лоадер\n      const statusMessage = document.createElement('img');\n      statusMessage.src = message.loading;\n      statusMessage.style.cssText = `\n        display: block;\n        margin: 0 auto;\n      `;\n      form.insertAdjacentElement('afterend', statusMessage); // додаємо після form\n\n// #region 1 Спосіб із XMLHttpRequest\n      // Спосіб із XMLHttpRequest\n      // const request = new XMLHttpRequest();\n      // request.open('POST', 'server.php');\n      // request.setRequestHeader('Content-type', 'application/json');\n// #endregion\n\n      // За допомогою forEach який викликає дану функцію формуємо обʼєкт formData із елементів нашой форми\n      const formData = new FormData(form); \n      /* formData це\n      об'єкт, який дозволяє збирати дані з HTML-форми в об'єкт для \n      подальшого використання.\n\n      Ця стрічка створює новий об'єкт FormData на основі елементу форми \n      (form). Об'єкт FormData автоматично витягує дані з усіх полів \n      форми і створює об'єкт, в якому ключами є імена полів, а \n      значеннями - їх введені значення.\n\n      Такий підхід особливо корисний при роботі з формами, оскільки він \n      дозволяє зручно та ефективно обробляти дані, які вводить користувач. \n      Потім ви можете використовувати цей об'єкт для подальшої обробки чи \n      відправки на сервер\n      */\n\n// #region Трасформуємо в JSON\n      // const object = {};\n      // formData.forEach((value, key) => {\n      //   object[key] = value;\n      // }); \n      // const json = JSON.stringify(object);\n// #endregion\n\n      // Кращий спосіб трансформації в JSON\n      const json = JSON.stringify(Object.fromEntries(formData.entries()));\n\n\n// #region 2 Спосіб з XMLHttpRequest \n      // request.send(json);\n      // request.addEventListener('load', () => {\n      //   if (request.status === 200) {\n      //     console.log(request.response);\n      //     showThanksModal(message.success);\n      //     form.reset();\n      //     statusMessage.remove();\n      //   } else {\n      //     showThanksModal(message.failure);\n      //   }\n      // });\n// #endregion\n      \n// #region fetch який відправляє текстовий формар\n      // fetch('server.php', {\n      //   method: \"POST\",\n      //   body: formData\n      // })\n      // .then(data => data.text())\n      // .then(data => {\n      //     console.log(data);\n      //     showThanksModal(message.success);\n      //     statusMessage.remove();\n      // })\n      // .catch(() => {\n      //   showThanksModal(message.failure);\n      // })\n      // .finally(() => {\n      //   form.reset();\n      // });\n// #endregion\n\n\n      // За допомогою fetch відправляємо json\n// #region використання fetch без функції, щоб краще зрозуміти fetch\n      // fetch('server.php', {\n      //   method: \"POST\",\n      //   headers: {\n      //     'Content-type': 'application/json'\n      //   },\n      //   body: json\n      // });\n// #endregion\n      \n      postData('http://localhost:3000/requests', json)\n      //.then(data => data.text()) - дані вже трансформовані в функції postData\n      .then(data => {\n          console.log(data);\n          showThanksModal(message.success);\n          statusMessage.remove();\n      })\n      .catch(() => {\n        showThanksModal(message.failure);\n      })\n      .finally(() => {\n        form.reset();\n      });\n\n// #region Опис роботи з fetch\n      // Як і раніше statusMessage показує спінер, далі\n      // За допомогою formData postData збираємо всі дані з форми\n      // І за допомогою fetch відправляємо наші дані\n\n      // Важливо!!!\n      // Проміс який запускається за допомогою fetch не перейде в стан rejected\n      // через відповідь http (повʼязана http протоколом), яка є \n      // помилкою (404, 500, 501, 502 і тд) він все рівно виконає дію \n      // нормально (then) - єдине що зміниться це властивість status, \n      // яка буде false. Найголовніше для fetch що він взагалі зміг зробити\n      // запит, відповідно помилкою буде проблема з інтернетом або просто\n      // щось завадило зробити запит. В цього є свої плюси...\n// #endregion\n\n    });\n  }\n\n  // Відображення вікна з результатом\n  function showThanksModal(message) {\n    const prevModalDialog = document.querySelector('.modal__dialog');\n    prevModalDialog.classList.add('hide');\n    openModal('.modal', modalTimerId);\n\n    const thanksModal = document.createElement('div');\n    thanksModal.classList.add('modal__dialog');\n    thanksModal.innerHTML = `\n      <div class=\"modal__dialog\">\n        <div class=\"modal__content\">\n                <div class=\"modal__close\" data-close >×</div>\n\n                <div class=\"modal__title\">${message}</div>\n        </div>\n      </div>\n    `;\n\n    document.querySelector('.modal').append(thanksModal); // додаємо на сторінку\n    setTimeout(() => {\n      thanksModal.remove(); \n      prevModalDialog.classList.add('show');\n      prevModalDialog.classList.remove('hide');\n      closeModal('.modal');\n    }, 3000); // Видаляємо наше модальне вікно\n  }\n}\n\n\nexport default forms;","function openModal(modalSelector, modalTimerIs) {\n  const modal = document.querySelector(modalSelector);\n\n  modal.classList.add('show'); // заміть add і remove можна використовувати modal.classList.toggle('show');\n  modal.classList.remove('hide');\n\n  document.body.style.overflow = 'hidden'; // сторінка під вікном не буде скролитись\n  \n  if (modalTimerIs) {\n    clearInterval(modalTimerIs);\n  }\n  \n}\n\nfunction closeModal(modalSelector) {\n  const modal = document.querySelector(modalSelector);\n\n  modal.classList.add('hide');\n  modal.classList.remove('show');\n\n  document.body.style.overflow = ''; // залишаємо пусті '' і браузер сам вирішить що підставити по дефолту\n}\n\nfunction modal(trigerSelector, modalSelector, modalTimerIs) {\n  const modalTrigger = document.querySelectorAll(trigerSelector),\n        modal = document.querySelector(modalSelector);\n\n  /* Просте рішення з інлайн стилями\n  modalTrigger.forEach(btn => {\n    btn.addEventListener('click', () => {\n      modal.style.display = 'block';\n    });\n  });\n\n  modalCloseBtn.addEventListener('click', () => {\n    modal.style.display = 'none';\n  });\n  */\n\n  modalTrigger.forEach(btn => {\n    btn.addEventListener('click', () => openModal(modalSelector, modalTimerIs)); // стрілочна функція потрібна, щоб функція викликалась після кліка\n  });\n\n  // modalCloseBtn.addEventListener('click', closeModal);\n\n  // Закрити вікно по кліку за межами вікна\n  modal.addEventListener('click', (e) => {\n    if (e.target === modal || e.target.getAttribute('data-close') == '') {\n      closeModal(modalSelector);\n    }\n  });\n\n  // Закриваємо вікно по натисканню на esc\n  document.addEventListener('keydown', (e) => {\n    if (e.code === 'Escape' && modal.classList.contains('show')) { // Щоб дізнатись інші e.code просто загуглити event.code\n      closeModal(modalSelector);\n    }\n  });\n\n  // Відкриваємо вікно, коли користувач доскроли до кінця сторінки\n  function showModalByScroll() {\n    if (window.scrollY + document.documentElement.clientHeight >=  document.documentElement.scrollHeight -1) {\n      openModal(modalSelector, modalTimerIs);\n      removeEventListener('scroll', showModalByScroll); // для видалення, потрібно точно повторити, що ми призначали при створенні слухача\n    }\n  }\n\n  window.addEventListener('scroll', showModalByScroll);\n\n  /* Розбір відкриття вікна в кінці сторінки\n  window.pageYOffset - pageYOffset властивість window, яка повертає кількість \n  пікселів, які прокурутив користувач.\n  \n  window.scrollY це те саме що і window.pageYOffset, але другий варіант \n  застарів\n  \n  document.documentElement.clientHeight - clientHeight властивість Element, \n  яка повертає висоту елементу (в даному випадку, повертає всю висоту \n  браузера, яка вважається областю сайту)\n  \n  document.documentElement.scrollHeight - висота всього сайту, є \n  обмежння з якими слід ознайомитись: https://learn.javascript.ru/size-and-scroll-window#shirina-vysota-dokumenta\n  \n\n  Додаткова інформація:\n      В наш window.addEventListener('scroll', func) - можна додати 3-й аргумент\n      наприклад window.addEventListener('scroll', func, {once: true}).\n      В нашому випадку він не спрацює, так як наш івент спрацьовує при \n      кожному скролі і відповідно вкінці сторінки вже не спрацює.\n  */\n  \n}\n\nexport default modal;\nexport {closeModal, openModal};","function slider({conteiner, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\n  const slides = document.querySelectorAll(slide),\n        slider = document.querySelector(conteiner),\n        prev = document.querySelector(prevArrow),\n        next = document.querySelector(nextArrow),\n        total = document.querySelector(totalCounter),\n        current = document.querySelector(currentCounter),\n        slidesWrapper = document.querySelector(wrapper),\n        slidesField = document.querySelector(field),\n        width = window.getComputedStyle(slidesWrapper).width; // отримуємо ширину після рендеру slidesWrapper\n\n  let slideIndex = 1;\n  let offset = 0; // наш відступ, щоб розуміти на скільки ми вже відступили\n\n// #region Мій варіант\n  // function showSlide(n) {\n  //   slides[n].classList.add('show', 'fade');\n  //   slides[n].classList.remove('hide');\n  // }\n\n  // function hideSlide() {\n  //   slides.forEach(slide => {\n  //     slide.classList.add('hide');\n  //     slide.classList.remove('show', 'fade');\n  //   });\n  // }\n\n  // hideSlide();\n  // showSlide(slideIndex-1);\n  // total.innerHTML = slides.length < 10 ?`0${slides.length}` : `${slides.length}`;\n  // current.innerHTML = `0${slideIndex}`;\n\n  // next.addEventListener('click', () => {\n  //   slideIndex < slides.length\n  //     ? slideIndex++\n  //     : slideIndex = 1;\n\n  //   hideSlide();\n  //   showSlide(slideIndex-1);\n  //   current.innerHTML = slideIndex < 10 ? `0${slideIndex}` : `${slideIndex}`;\n  // });\n\n  // prev.addEventListener('click', () => {\n  //   slideIndex > 1\n  //     ? slideIndex--\n  //     : slideIndex = slides.length;\n\n  //   hideSlide();\n  //   showSlide(slideIndex-1);\n  //   current.innerHTML = slideIndex < 10 ? `0${slideIndex}` : `${slideIndex}`;\n  // });\n// #endregion\n\n// #region Варіант вчителя 1  \n  // showSlides(slideIndex); \n  // total.textContent = slides.length < 10 \n  //   ?`0${slides.length}` \n  //   : `${slides.length}`; \n\n  // function showSlides(n) {\n  //   if (n > slides.length) {\n  //     slideIndex = 1;\n  //   }\n\n  //   if (n < 1) {\n  //     slideIndex = slides.length;\n  //   }\n\n  //   slides.forEach(slide => {\n  //     slide.classList.add('hide');\n  //     slide.classList.remove('show', 'fade');\n  //   });\n\n  //   slides[slideIndex-1].classList.add('show', 'fade');\n  //   slides[slideIndex-1].classList.remove('hide');\n\n  //   current.textContent = slideIndex < 10 \n  //     ? `0${slideIndex}` \n  //     : slideIndex;\n  // }\n\n  // function plusSlide(n) {\n  //   showSlides(slideIndex += n);\n  // }\n\n  // prev.addEventListener('click', () => {\n  //   plusSlide(-1);\n  // });\n\n  // next.addEventListener('click', () => {\n  //   plusSlide(1);\n  // });\n// #endregion\n\n// #region Варіант вчителя 2*\n\n// #region Опис рішення\n/* \nДля початку в html додаємо слайдеру обгортку .offer__slider-inner. \nЦя обгортка буде нашим віконцем, через яке ми будемо бачити слайдер\n\nАлгоритм створення:\n  Велика обгортка .offer__slider-wrapper - якій ми призначимо властивість overflow: hidden\n  Тобто все що виходить за межі .offer__slider-wrapper буде приховано\n\n  .offer__slider-inner - буде мати ту ширину що і всі слайди разом взяті\n\n  Відповідно, при натискані на стрілки, в доному рішення слайди будуть переміщатись по\n  відношенню до .offer__slider-wrapper (а не приховуватись, як в попередніх рішеннях).\n  Це буде робитись за допомогою transform\n\n  window.getComputedStyle(slidesWrapper).width; // отримуємо ширину після рендеру slidesWrapper\n*/\n// #endregion \n\n  // Налаштовуємо лічильник\n\tif (slides.length < 10) {\n\t\ttotal.textContent = `0${slides.length}`;\n\t\tcurrent.textContent = `0${slideIndex}`;\n\t} else {\n\t\ttotal.textContent = slides.length;\n\t\tcurrent.textContent = slideIndex;\n  }\n\n  // Задаємо ширину slidesField, щоб всередину помістити всі слайди\n  slidesField.style.width = 100 * slides.length + '%';\n\n  // Виставляємо всі слайди по горизонталі\n  slidesField.style.display = 'flex';\n\n  // Додаємл плавність руху слайдів\n  slidesField.style.transition = '0.5s all';\n\n  // Обмежуємо видиму область, щоб приховати не активні слайди\n  slidesWrapper.style.overflow = 'hidden';\n\n  // Задаємо всім слайдам однакову ширину\n  slides.forEach(slide => {\n    slide.style.width = width;\n  });\n\n  // Створюємо і налаштовуємо відображення індикатора\n  slider.style.position = 'relative';\n\n  const indicators = document.createElement('ol'),\n        dots = [];\n\n  indicators.classList.add('.carousel_indicators');\n\n  // Додаємо стилі за допомогою JS\n  indicators.style.cssText = `\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 15;\n    display: flex;\n    justify-content: center;\n    margin-right: 15%;\n    margin-left: 15%;\n    list-style: none;\n  `;\n\n  slider.append(indicators);\n\n  // Додаємо правильну кількість індикаторів на сторінку\n  for (let i =0; i < slides.length; i++) {\n    const dot = document.createElement('li');\n    dot.setAttribute('data-slide-to', i + 1);\n    dot.classList.add('.dot');\n    dot.style.cssText = `\n      box-sizing: content-box;\n      flex: 0 1 auto;\n      width: 30px;\n      height: 6px;\n      margin-right: 3px;\n      margin-left: 3px;\n      cursor: pointer;\n      background-color: #fff;\n      background-clip: padding-box;\n      border-top: 10px solid transparent;\n      border-bottom: 10px solid transparent;\n      opacity: .5;\n      transition: opacity .6s ease;\n    `;\n    if (i == 0) {\n      dot.style.opacity = 1;\n    }\n    indicators.append(dot);\n    dots.push(dot); // Формуємо масив із нашими дотсами\n  }\n\n  function deleteNotDigits(str) {\n    return +str.replace(/\\D/g, '');\n  }\n\n  next.addEventListener('click', () => {\n    // Перевіряємо чи в нас ще є слайди попереду\n// #region Без регулярного виразу\n    // if (offset == +width.slice(0, width.length - 2) * (slides.length - 1)) { // width виглядає, як 500px, тому його перетворюємо в числове значення\n    //   offset = 0;\n    // } else {\n    //   offset += +width.slice(0, width.length - 2);\n    // }\n// #endregion\n\n    if (offset == deleteNotDigits(width) * (slides.length - 1)) { \n      offset = 0;\n    } else {\n      offset += deleteNotDigits(width);\n    }\n\n    // Щоб перейти до наступного нам потрібно\n    slidesField.style.transform = `translateX(-${offset}px)`;\n\n    // Змінюємо номерацію\n    if (slideIndex == slides.length) {\n      slideIndex = 1;\n    } else {\n      slideIndex++;\n    }\n\n    current.textContent = slideIndex < 10 \n      ? `0${slideIndex}` \n      : slideIndex;\n\n    // Відмічаємо активний індикатор\n    dots.forEach(dot => dot.style.opacity = '.5');\n    dots[slideIndex - 1].style.opacity = '1';\n  });\n\n  prev.addEventListener('click', () => {\n    // Перевіряємо чи в нас ще є слайди попереду\n    // #region Без регулярного виразу\n    // if (offset == 0) {\n    //   offset = +width.slice(0, width.length - 2) * (slides.length - 1);\n    // } else {\n    //   offset -= +width.slice(0, width.length - 2);\n    // }\n    // #endregion\n\n    if (offset == 0) {\n      offset = deleteNotDigits(width) * (slides.length - 1);\n    } else {\n      offset -= deleteNotDigits(width);\n    }\n\n    // Щоб перейти до попереднього нам потрібно\n    slidesField.style.transform = `translateX(-${offset}px)`;\n\n    // Змінюємо номерацію\n    if (slideIndex == 1) {\n      slideIndex = slides.length;\n    } else {\n      slideIndex--;\n    }\n\n    current.textContent = slideIndex < 10 \n      ? `0${slideIndex}` \n      : slideIndex;\n\n    // Відмічаємо активний індикатор\n    dots.forEach(dot => dot.style.opacity = '.5');\n    dots[slideIndex - 1].style.opacity = '1';\n  });\n\n  // Робимо dots клікабельними\n  dots.forEach(dot => {\n    dot.addEventListener('click', (e) => {\n      const slideTo = e.target.getAttribute('data-slide-to');\n\n      slideIndex = slideTo;\n      offset = deleteNotDigits(width) * (slideTo - 1);\n\n      slidesField.style.transform = `translateX(-${offset}px)`;\n\n      current.textContent = slideIndex < 10 \n        ? `0${slideIndex}` \n        : slideIndex;\n\n      dots.forEach(dot => dot.style.opacity = '.5');\n      dots[slideIndex - 1].style.opacity = '1';\n    });\n\n  });\n// #endregion варіант 3\n\n}\n\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentselector, activeClass) {\n  const tabs = document.querySelectorAll(tabsSelector),\n          tabsContent = document.querySelectorAll(tabsContentSelector),\n          tabsParent = document.querySelector(tabsParentselector);\n\n\n  function hideTabContent() {   \n    tabsContent.forEach(item => {\n      // item.style.display = 'none'; - інлайн стилі\n      item.classList.add('hide');\n      item.classList.remove('show', 'fade');\n    });\n\n    tabs.forEach(item => {\n      item.classList.remove(activeClass);\n    });\n  }\n\n  function showTabContent(i = 0) {\n    // tabsContent[i].style.display = 'block'; - інлайн стилі\n    tabsContent[i].classList.add('show', 'fade'); // fade - для анімації\n    tabsContent[i].classList.remove('hide');\n    tabs[i].classList.add(activeClass);\n  }\n\n  hideTabContent();\n  showTabContent();\n\n  tabsParent.addEventListener('click', (event) => {\n    const target = event.target;\n\n    if (target && target.classList.contains(tabsSelector.slice(1))) {\n      tabs.forEach((item, i) => {\n        if (target == item) {\n          hideTabContent();\n          showTabContent(i);\n        }\n      });\n    }\n  });\n}\n\nexport default tabs;","function timer(id, deadline) {\n\n  function getTimeRemaining(endtime) {\n    let days, hours, minutes, seconds;\n\n    const t = Date.parse(endtime) - Date.parse(new Date()); //В результаті ми отрмали різницю між кінцевой датой і сьогоднішньой в мілісекундах. В правій частині Date.parse використовується лише для одноманістності, в цілому можна обійтись без нього.\n          \n    if (t <= 0) { // перевірка чи кінцева дата в майбутньому\n      // замість 0 тут можна наприклад підставити іншу верстку, де буде повідомлення, що таймер закінчився\n      days = 0;\n      hours = 0;\n      minutes = 0;\n      seconds = 0;\n    } else {\n      days = Math.floor(t / (1000 * 60 * 60 * 24)); // (1000 * 60 * 60 * 24) = визначили кількість мілісекунд в сутках... \n      hours = Math.floor((t / (1000 * 60 * 60) % 24)); // (t / 1000 * 60 * 60) = визначили загальну кільсть годин. Друга частина \"% 24\" = знак % ділить результат лівої частни на праву і повертає залишок (24 це години в добі).\n      minutes = Math.floor((t / 1000 / 60) % 60);\n      seconds = Math.floor((t / 1000) % 60);\n    }\n\n    return {\n      'total': t,\n      'days': days,\n      'hours': hours,\n      'minutes': minutes,\n      'seconds': seconds\n    };\n  }\n\n  function getZero(num) { // Функція яка буде додавати 0, щоб у нас завжди число складалось з 2-х символів\n    if (num >= 0 && num < 10) {\n      return `0${num}`;\n    } else {\n      return num;\n    }\n  }\n\n  function setClock(selector, endtime) {\n    const timer = document.querySelector(selector),\n          days = timer.querySelector('#days'),\n          hours = timer.querySelector('#hours'),\n          minutes = timer.querySelector('#minutes'),\n          seconds = timer.querySelector('#seconds'),\n          timeInterval = setInterval(updateClock, 1000);\n\n    updateClock(); // Викликаємо для того щоб ініціалізувати наш таймер і прибрати миготіння часу який заданий в HTML файлі\n\n    function updateClock() {\n      const t = getTimeRemaining(endtime);\n\n      days.innerHTML = getZero(t.days);\n      hours.innerHTML = getZero(t.hours);\n      minutes.innerHTML = getZero(t.minutes);\n      seconds.innerHTML = getZero(t.seconds);\n\n      // Перевірка на 0, яка вимага більше ресурсів ніж та що вище...\n      // if (t.seconds < 0) {\n      //   days.innerHTML = '00';\n      //   hours.innerHTML = '00';\n      //   minutes.innerHTML = '00';\n      //   seconds.innerHTML = '00';\n      // } else {\n      //   days.innerHTML = getZero(t.days);\n      //   hours.innerHTML = getZero(t.hours);\n      //   minutes.innerHTML = getZero(t.minutes);\n      //   seconds.innerHTML = getZero(t.seconds);\n      // }\n\n\n      if (t.total <= 0) {\n        clearInterval(timeInterval);\n      }\n    }\n  }\n\n  setClock(id, deadline);\n}\n\n\nexport default timer;","\n  // Функція для відправки на сервер і обробки результата\n  const postData = async (url, data) => {\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: data\n    });\n\n  // Повертаємо проміс, щоб потім можна було з ним працювати за допомогою .then\n  return await res.json();\n};\n\nasync function getResource(url) {\n  let res = await fetch(url);\n\n  //ok - це вбудований метод fetch\n  if (!res.ok) {\n    // Викидуємо обʼєкт помилки (це зроблена вручну помилка, яка \n    // відображаться в консолі), а .status це інший вбудований метод в fetch\n    throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n  }\n\n  return await res.json();\n};\n\n// #region Запит до сервера без axios\n  // getResource('http://localhost:3000/menu')\n  //   .then(data => {\n// #region Не зручний але зрозумілий запис\n      // data.forEach(obj => {\n      //   new ItemCard(obj.img, obj.altimg, obj.title, obj.descr, obj.price)\n      //     .render();\n      // });\n// #endregion\n      \n    //   // Деструктуризація в параметрі\n    //   data.forEach(({img, altimg, title, descr, price}) => {\n    //     new ItemCard(img, altimg, title, descr, price, '.menu .container').render();\n    //   });\n    // });\n// #region опис getResource\n/*\nЗа допомогою запита до сервера, ми отримуємо масив \"menu\" - масив з\nобʼєктам, а занчить ми можемо перебрати його через forEach і не думати\nпро кількість \"скільки карток нам потрібно створити\".\n\nТой обʼєкт який ми перебираємо, ми деструктурезуємо по окремим частинам\nі ці частини передаємо в наш class ItemCard, який створює нову \nкартку на сторінці\n*/\n// #endregion\n// #endregion\n\n\nexport {postData, getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\nimport modal from './modules/modal';\nimport { openModal } from './modules/modal';\nimport timer from './modules/timer';\nimport cards from './modules/cards';\nimport calc from './modules/calc';\nimport forms from './modules/forms';\nimport slider from './modules/slider';\n\nwindow.addEventListener('DOMContentLoaded', () => {      \n   // Відкриваємо вікно через певний проміжок часу\n   const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 60000);\n  \n  tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\n  modal('[data-modal]', '.modal', modalTimerId);\n  timer('.timer', '2024-06-23');\n  cards();\n  calc();\n  forms('form', modalTimerId);\n  slider({\n    conteiner: '.offer__slider', \n    slide: '.offer__slide', \n    nextArrow: '.offer__slider-next', \n    prevArrow: '.offer__slider-prev', \n    totalCounter: '#total', \n    currentCounter: '#current', \n    wrapper: '.offer__slider-wrapper', \n    field:'.offer__slider-inner'\n  });\n  \n});"],"names":[],"sourceRoot":""}